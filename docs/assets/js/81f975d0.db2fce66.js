"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[427],{8804:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var r=n(7896),a=n(1461),i=(n(2784),n(876)),l=["components"],o={sidebar_position:3,sidebar_label:"AsyncStateProvider"},s="AsyncStateProvider",p={unversionedId:"api/provider",id:"api/provider",isDocsHomePage:!1,title:"AsyncStateProvider",description:"To share the state returned from your producer function, you need a Provider to hold it.",source:"@site/docs/api/provider.md",sourceDirName:"api",slug:"/api/provider",permalink:"/react-async-states/docs/api/provider",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"AsyncStateProvider"},sidebar:"tutorialSidebar",previous:{title:"The producer function",permalink:"/react-async-states/docs/api/producer-function"},next:{title:"useAsyncState",permalink:"/react-async-states/docs/api/use-async-state"}},u=[],d={toc:u};function c(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"asyncstateprovider"},(0,i.kt)("inlineCode",{parentName:"h1"},"AsyncStateProvider")),(0,i.kt)("p",null,"To share the state returned from your producer function, you need a Provider to hold it."),(0,i.kt)("p",null,"The main purpose of the provider is:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"To hold the async states and allows subscription and selection"),(0,i.kt)("li",{parentName:"ul"},"To hold a universal payload that's given to all registered async states")),(0,i.kt)("p",null,"It accepts the following props:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Prop"),(0,i.kt)("th",{parentName:"tr",align:null},"PropType"),(0,i.kt)("th",{parentName:"tr",align:null},"Default value"),(0,i.kt)("th",{parentName:"tr",align:null},"Usage"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"payload")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Map<any, any>")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{}")),(0,i.kt)("td",{parentName:"tr",align:null},"Payload at provider level, will be accessible to all hoisted async states")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"initialAsyncStates")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"AsyncStateDefinition[] or Map<string, AsyncStateDefinition>")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[]")),(0,i.kt)("td",{parentName:"tr",align:null},"The initial Map or array of definitions of async states")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"children")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ReactElement")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The React tree inside this provider")))),(0,i.kt)("p",null,"To define an async state for the provider, you need the following:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default value"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The unique identifier or the name of the async state")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"producer")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"function or undefined")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The producer function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"initialValue")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"any")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:null},"The state value when the status is ",(0,i.kt)("inlineCode",{parentName:"td"},"initial"))))),(0,i.kt)("p",null,"The initialAsyncStates, like stated, is an array of objects or a map; let's create some:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// pass this to provider\nlet demoAsyncStates = {\n  users: {\n    key: "users",\n    initialValue: [],\n    producer: async function getUsers(argv) {\n      return await fetchUsers(argv.payload.queryString);\n    },\n  },\n  currentUser: {\n    key: "currentUser",\n    // generators are the recommended way to go!\n    // because they allow to abort between yields! unlike promises and async-await!\n    producer: getCurrentUserGenerator,\n  },\n  // with undefined producer, you will be calling `replaceState` to change the state\n  somethingOpen: {\n    key: "somethingOpen",\n    initialValue: false,\n  },\n  localTodos: {\n    key: "something",\n    initialValue: {},\n    producer: function todosReducerPromise(argv) {\n      // myTodosReducer is a regular reducer(state, action) that returns the new state value, my guess is that you\'ve wrote many\n      return myTodosReducer(argv.lastSuccess, ...argv.args);\n    }\n  },\n}\nconst initialAsyncState = Object.values(demoAsyncStates); // or pass this to provider\n')),(0,i.kt)("p",null,"PS: You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncStateBuilder")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"createAsyncState")," to create these objects this way:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import {AsyncStateBuilder, createAsyncState} from "react-async-states";\nlet usersAS = AsyncStateBuilder()\n    .key("users")\n    .initialValue([])\n    .producer(fetchUsersPromise)\n    .build();\n// or this way\nlet usersAs = createAsyncState(/*key*/"users", /*producer*/fetchUsersPromise, /*initialValue*/ []);\n')))}c.isMDXComponent=!0},876:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,y=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(y,l(l({ref:t},u),{},{components:n})):r.createElement(y,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);