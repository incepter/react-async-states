"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[195],{4993:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(2983);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,m=u["".concat(l,".").concat(h)]||u[h]||c[h]||i;return n?a.createElement(m,s(s({ref:t},d),{},{components:n})):a.createElement(m,s({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8677:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(2206),r=(n(2983),n(4993));const i={sidebar_position:1,sidebar_label:"First steps"},s="First steps",o={unversionedId:"tutorial/first-steps",id:"tutorial/first-steps",title:"First steps",description:"In this section you will learn how to deal with the following using the library:",source:"@site/docs/tutorial/first-steps.md",sourceDirName:"tutorial",slug:"/tutorial/first-steps",permalink:"/react-async-states/docs/tutorial/first-steps",draft:!1,editUrl:"https://github.com/incepter/react-async-states/edit/main/packages/docs/docs/tutorial/first-steps.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"First steps"},sidebar:"tutorialSidebar",previous:{title:"Concepts",permalink:"/react-async-states/docs/concepts"},next:{title:"State sharing",permalink:"/react-async-states/docs/tutorial/state-sharing"}},l={},p=[{value:"Fetching the users list",id:"fetching-the-users-list",level:2},{value:"Trigger the fetch on button&#39;s click",id:"trigger-the-fetch-on-buttons-click",level:3},{value:"Make it automatic on mount",id:"make-it-automatic-on-mount",level:3},{value:"Fetching the user details",id:"fetching-the-user-details",level:2},{value:"React to dependencies with condition",id:"react-to-dependencies-with-condition",level:3},{value:"Eliminate the previous state variable",id:"eliminate-the-previous-state-variable",level:3},{value:"Debounce search while typing",id:"debounce-search-while-typing",level:3},{value:"Skip the pending state if request is so fast",id:"skip-the-pending-state-if-request-is-so-fast",level:3}],d={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"first-steps"},"First steps"),(0,r.kt)("p",null,"In this section you will learn how to deal with the following using the library:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Manually trigger data fetching"),(0,r.kt)("li",{parentName:"ul"},"Trigger data fetching based on dependencies"),(0,r.kt)("li",{parentName:"ul"},"Search while typing (+ concurrency & debounce)"),(0,r.kt)("li",{parentName:"ul"},"URL based automatic data fetching (via the query string)")),(0,r.kt)("p",null,"The following examples are using the ",(0,r.kt)("inlineCode",{parentName:"p"},"useAsync")," hook."),(0,r.kt)("p",null,"Its signature is like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"function useAsync(options, dependencies = []) {\n  // ...\n}\n")),(0,r.kt)("h2",{id:"fetching-the-users-list"},"Fetching the users list"),(0,r.kt)("h3",{id:"trigger-the-fetch-on-buttons-click"},"Trigger the fetch on button's click"),(0,r.kt)("p",null,"The following snippet should get you started to the library:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import axios from "axios";\nimport { useAsync, ProducerProps } from "react-async-states";\n\nconst API = axios.create({\n  baseURL: "https://jsonplaceholder.typicode.com",\n});\n\ntype User = {\n  id: number;\n  email: string;\n  name: string;\n};\n\nasync function fetchUsers({ signal }: ProducerProps<User[]>) {\n  // artificially delayed by 500ms\n  await new Promise((res) => setTimeout(res, 500));\n  return await API.get("/users", { signal }).then(({ data }) => data);\n}\n\nexport default function App() {\n  const { data, isPending, source } = useAsync(fetchUsers);\n\n  return (\n    <div className="App">\n      <button disabled={isPending} onClick={() => source.run()}>\n        Fetch users {isPending && "..."}\n      </button>\n      {data && (\n        <ul>\n          <summary>Users list:</summary>\n          {data.map((user: User) => (\n            <li key={user.id}>{user.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n')),(0,r.kt)("p",null,"Here is a codesandbox demo with the previous code snippet:"),(0,r.kt)("details",{open:!0},(0,r.kt)("summary",null,"Fetching users list codesandbox demo"),(0,r.kt)("iframe",{style:{width:"100%",height:"500px",border:0,borderRadius:4,overflow:"hidden"},src:"https://codesandbox.io/embed/s84vjc?view=Editor+%2B+Preview&module=%2Fsrc%2FApp.tsx",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media;\ngeolocation; gyroscope; hid; microphone; midi; payment; usb; vr;\nxr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation\nallow-same-origin allow-scripts"})),(0,r.kt)("h3",{id:"make-it-automatic-on-mount"},"Make it automatic on mount"),(0,r.kt)("p",null,"There are two ways to achieve this:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"use the ",(0,r.kt)("inlineCode",{parentName:"li"},"useAsync")," hook with a configuration object while passing the\n",(0,r.kt)("inlineCode",{parentName:"li"},"producer: fetchUsers")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"lazy: false")," properties."),(0,r.kt)("li",{parentName:"ul"},"use the ",(0,r.kt)("inlineCode",{parentName:"li"},"useAsync.auto(fetchUsers)")," hook which adds the ",(0,r.kt)("inlineCode",{parentName:"li"},"lazy: false")," for you.")),(0,r.kt)("p",null,"We used useAsync as follows in the previous example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = useAsync(fetchUsers);\n\n// this is the same as:\nconst result = useAsync({\n  producer: fetchUsers,\n});\n")),(0,r.kt)("p",null,"To make it automatic on component mount:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = useAsync({\n  // highlight-next-line\n  lazy: false,\n  // highlight-next-line\n  producer: fetchUsers,\n});\n\n// this is the same as:\n// highlight-next-line\nconst result = useAsync.auto(fetchUsers);\n\n")),(0,r.kt)("p",null,"See it here using the ",(0,r.kt)("inlineCode",{parentName:"p"},"useAsync.auto")," variant:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Fetching users list automatically on mount codesandbox demo"),(0,r.kt)("iframe",{style:{width:"100%",height:"500px",border:0,borderRadius:4,overflow:"hidden"},src:"https://codesandbox.io/embed/v72ddx?view=Editor+%2B+Preview&module=%2Fsrc%2FApp.tsx",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media;\ngeolocation; gyroscope; hid; microphone; midi; payment; usb; vr;\nxr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation\nallow-same-origin allow-scripts"})),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Notice how nothing used by the ",(0,r.kt)("inlineCode",{parentName:"p"},"useAsync")," hook depend on the component render."),(0,r.kt)("p",{parentName:"admonition"},"A simple:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"useAsync.auto(producer);\n"))),(0,r.kt)("h2",{id:"fetching-the-user-details"},"Fetching the user details"),(0,r.kt)("p",null,"Now, let's try to use variables from the component render phase."),(0,r.kt)("p",null,"First, let's make it ugly by storing a ",(0,r.kt)("inlineCode",{parentName:"p"},"React.State")," variable then pass it\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"useAsync"),". Then, let's eliminate the used state variable."),(0,r.kt)("h3",{id:"react-to-dependencies-with-condition"},"React to dependencies with condition"),(0,r.kt)("p",null,"Now, let's fetch the user details when typing his id."),(0,r.kt)("p",null,"This time, we will be:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Storing the ",(0,r.kt)("inlineCode",{parentName:"li"},"userId")," in a state variable using React ",(0,r.kt)("inlineCode",{parentName:"li"},"useState")," hook."),(0,r.kt)("li",{parentName:"ul"},"Pass the userId to our ",(0,r.kt)("inlineCode",{parentName:"li"},"producer")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"args")," for proper typing."),(0,r.kt)("li",{parentName:"ul"},"Only fetch if the userId is not empty and not ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},"Fetch everytime the ",(0,r.kt)("inlineCode",{parentName:"li"},"userId")," changes."),(0,r.kt)("li",{parentName:"ul"},"Abort the previous call if a second is done while ",(0,r.kt)("inlineCode",{parentName:"li"},"pending"),".")),(0,r.kt)("p",null,"Here is a full working example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'\nasync function fetchUserDetails({\n  signal,\n  args: [userId],\n}: ProducerProps<User, [string]>) {\n  // artificially delayed by 500ms\n  await new Promise((res) => setTimeout(res, 500));\n  return await API.get(`/users/${userId}`, { signal }).then(({ data }) => data);\n}\n\nexport default function App() {\n  const [userId, setUserId] = useState("");\n  const { data, isPending, error } = useAsync.auto(\n    {\n      condition: !!userId,\n      autoRunArgs: [userId],\n      producer: fetchUserDetails,\n    },\n    [userId]\n  );\n\n  return (\n    <div className="App">\n      <input placeholder="userId" onChange={(e) => setUserId(e.target.value)} />\n      {isPending && "Loading..."}\n      {data && (\n        <details open>\n          <pre>{JSON.stringify(data, null, 4)}</pre>\n        </details>\n      )}\n      {error && (\n        <div>\n          error while retrieving user details\n          <pre>{error.toString()}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n')),(0,r.kt)("p",null,"Try it here, notice the cancellation of previous requests, also, you can remove\nthe abort callback and/or the signal to make concurrency chaos, and make sure to\nobserve the consistency in the UI."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"react to dependencies change with condition codesandbox demo"),(0,r.kt)("iframe",{style:{width:"100%",height:"500px",border:0,borderRadius:4,overflow:"hidden"},src:"https://codesandbox.io/embed/cjmlnw?view=Editor+%2B+Preview&module=%2Fsrc%2FApp.tsx",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media;\ngeolocation; gyroscope; hid; microphone; midi; payment; usb; vr;\nxr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation\nallow-same-origin allow-scripts"})),(0,r.kt)("h3",{id:"eliminate-the-previous-state-variable"},"Eliminate the previous state variable"),(0,r.kt)("p",null,"Let's now use the ",(0,r.kt)("inlineCode",{parentName:"p"},"run")," function from the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," to fully eliminate any\ncomponent render variable or additional state:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'\nasync function fetchUserDetails({\n  signal,\n  args: [userId],\n}: ProducerProps<User, [string]>) {\n  if (!userId) {\n    throw new Error("User Id is required");\n  }\n  return await API.get(`/users/${userId}`, { signal }).then(({ data }) => data);\n}\n\nexport default function App() {\n  const { data, isPending, isSuccess, isError, error, source } =\n    useAsync(fetchUserDetails);\n\n  return (\n    <div className="App">\n      <input\n        placeholder="userId"\n        onChange={(e) => source.run(e.target.value)}\n      />\n      {isPending && "Loading..."}\n      {isSuccess && (\n        <details open>\n          <pre>{JSON.stringify(data, null, 4)}</pre>\n        </details>\n      )}\n      {isError && (\n        <div>\n          error while retrieving user details\n          <pre>{error.toString()}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Load user details as you type"),(0,r.kt)("iframe",{style:{width:"100%",height:"500px",border:0,borderRadius:4,overflow:"hidden"},src:"https://codesandbox.io/embed/cjmlnw?view=Editor+%2B+Preview&module=%2Fsrc%2FApp.tsx",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media;\ngeolocation; gyroscope; hid; microphone; midi; payment; usb; vr;\nxr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation\nallow-same-origin allow-scripts"})),(0,r.kt)("h3",{id:"debounce-search-while-typing"},"Debounce search while typing"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We will slow down all requests by 500ms"),(0,r.kt)("li",{parentName:"ul"},"We will debounce by 400ms, so fetch will occur only after we hang on typing"),(0,r.kt)("li",{parentName:"ul"},"We will use the ",(0,r.kt)("inlineCode",{parentName:"li"},"state")," property from the ",(0,r.kt)("inlineCode",{parentName:"li"},"useAsync")," result to show extra\ninformation.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"In ",(0,r.kt)("inlineCode",{parentName:"p"},"useAsync")," result:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"state")," refers to the current state."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data")," refers to the last success data."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"state.data")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," when ",(0,r.kt)("inlineCode",{parentName:"li"},"state.status")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"success"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'// ...\nfunction App() {\n  const { state, source } = useAsync({\n    key: "user-details",\n    producer: fetchUserDetails,\n    // pass this args to the producer\n\n    // apply this effect to runs\n    // highlight-next-line\n    runEffect: "debounce",\n    // this is the effect duration\n    // highlight-next-line\n    runEffectDurationMs: 400,\n  });\n\n  return (\n    <div className="App">\n      <input\n        placeholder="userId"\n        onChange={(e) => source.run(e.target.value)}\n      />\n      {state.status === "pending" &&\n        "Loading user with Id: " + state.props.args![0]}\n      {state.status === "success" && (\n        <details open>\n          <pre>{JSON.stringify(state.data, null, 4)}</pre>\n        </details>\n      )}\n      {state.status === "error" && (\n        <div>\n          error while retrieving user details\n          <pre>{state.data.toString()}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\n\n')),(0,r.kt)("p",null,"Try it here:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"debounce the run codesandbox demo"),(0,r.kt)("iframe",{style:{width:"100%",height:"500px",border:0,borderRadius:4,overflow:"hidden"},src:"https://codesandbox.io/embed/xtfvjx?view=Editor+%2B+Preview&module=%2Fsrc%2FApp.tsx",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media;\ngeolocation; gyroscope; hid; microphone; midi; payment; usb; vr;\nxr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation\nallow-same-origin allow-scripts"})),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you take a close look at how we used ",(0,r.kt)("inlineCode",{parentName:"p"},"useState")," in the previous example,\nyou'd see that our producer does not depend from any closure related to\nthe component render:\nit can safely be moved to module level."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const searchUserConfig = {\n  producer: fetchUser,\n  runEffect: "debounce",\n  runEffectDurationMs: 400\n};\n\nexport default function App() {\n  const { source, state } = useState(searchUserConfig);\n  // ... the rest\n}\n'))),(0,r.kt)("h3",{id:"skip-the-pending-state-if-request-is-so-fast"},"Skip the pending state if request is so fast"),(0,r.kt)("p",null,"To skip the pending state, the ",(0,r.kt)("inlineCode",{parentName:"p"},"skipPendingDelayMs")," is used."),(0,r.kt)("p",null,"It means that when state turns to pending, and then changes under that delay,\nthe pending update shall be skipped."),(0,r.kt)("p",null,"This makes your app feels synchronous."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'const { state, source } = useAsync({\n  key: "user-details",\n  producer: fetchUserDetails,\n  // pass this args to the producer\n  \n  // apply this effect to runs\n  runEffect: "debounce",\n  // this is the effect duration\n  runEffectDurationMs: 400,\n  \n  // skip the pending status when the request is too fast\n  // highlight-next-line\n  skipPendingDelayMs: 300,\n});\n\n')),(0,r.kt)("p",null,"See it in action here, and notice that when having a good internet connexion\nthat the experience feels instantaneous."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Skip the pending state"),(0,r.kt)("iframe",{style:{width:"100%",height:"500px",border:0,borderRadius:4,overflow:"hidden"},src:"https://codesandbox.io/embed/qywx53?view=Editor+%2B+Preview&module=%2Fsrc%2FApp.tsx",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media;\ngeolocation; gyroscope; hid; microphone; midi; payment; usb; vr;\nxr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation\nallow-same-origin allow-scripts"})))}c.isMDXComponent=!0}}]);