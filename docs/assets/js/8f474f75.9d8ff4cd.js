"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[94],{4993:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(2983);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,y=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2976:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(2206),a=(n(2983),n(4993));const o={sidebar_position:2,sidebar_label:"State sharing"},i="State sharing",s={unversionedId:"tutorial/state-sharing",id:"tutorial/state-sharing",title:"State sharing",description:"Definition by key",source:"@site/docs/tutorial/state-sharing.md",sourceDirName:"tutorial",slug:"/tutorial/state-sharing",permalink:"/react-async-states/docs/tutorial/state-sharing",draft:!1,editUrl:"https://github.com/incepter/react-async-states/edit/main/packages/docs/docs/tutorial/state-sharing.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"State sharing"},sidebar:"tutorialSidebar",previous:{title:"First steps",permalink:"/react-async-states/docs/tutorial/first-steps"},next:{title:"The producer",permalink:"/react-async-states/docs/api/producer-function"}},c={},l=[{value:"Definition by key",id:"definition-by-key",level:2},{value:"Creating sources",id:"creating-sources",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"state-sharing"},"State sharing"),(0,a.kt)("h2",{id:"definition-by-key"},"Definition by key"),(0,a.kt)("p",null,"By default, any state you create by the library is shared and will be accessible\nfrom your whole application without tuning or configuration."),(0,a.kt)("p",null,"State instances are defined by their ",(0,a.kt)("inlineCode",{parentName:"p"},"key"),", it is its unique name. So as long\nas you provide the same key, the same state is used all over your application\nfor the default behavior."),(0,a.kt)("p",null,"Having this said, the following just works"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"It just works!")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useAsync } from "react-async-states";\n\nfunction ComponentA() {\n  let { state, source: { setState } } = useAsync("tracker");\n\n  return (\n    <div>\n      <span>State Value is: {state.data}</span>\n      <button onClick={() => setState("A")}>set A</button>\n    </div>\n  );\n}\n\nfunction ComponentB() {\n  let { state, source: { setState } } = useAsync("tracker");\n\n  return (\n    <div>\n      <span>State Value is: {state.data}</span>\n      <button onClick={() => setState("B")}>set B</button>\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <>\n      <ComponentA />\n      <hr />\n      <ComponentB />\n    </>\n  );\n}\n')),(0,a.kt)("p",null,"Test ",(0,a.kt)("a",{parentName:"p",href:"https://codesandbox.io/p/sandbox/bold-bash-iflftb?file=%2Fsrc%2FApp.js%3A7%2C24"},"it here")),(0,a.kt)("h2",{id:"creating-sources"},"Creating sources"),(0,a.kt)("p",null,"There is another effective way to define your states and make them accessible\nfrom the whole application: The ",(0,a.kt)("inlineCode",{parentName:"p"},"Source"),"."),(0,a.kt)("p",null,"The source object is reference to your state that allows you to manipulate it\nand have control over it from anywhere."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'const source = createSource("state-name", producer, configuration);\n')),(0,a.kt)("p",null,"It is so powerful in the sense that you can create module level sources and\nexport them, ",(0,a.kt)("inlineCode",{parentName:"p"},"useAsync")," and all the hooks provided by the library understand\nthis object for faster subscription into your components."),(0,a.kt)("p",null,"For example, we can create and export the source and the utilities function\nthat will operate on it. Let's take the classic counter example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { createSource } from "react-async-states";\n\nexport const counter = createSource("counter", null, { initialValue: 0 });\n\nexport function reset() { ... }\nexport function increment() { ... }\nexport function decrement() { ... }\n')),(0,a.kt)("p",null,"The same applies for all types of producers and all configs."))}d.isMDXComponent=!0}}]);