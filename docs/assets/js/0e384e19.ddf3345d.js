"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{4993:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(2983);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return t?a.createElement(h,s(s({ref:n},c),{},{components:t})):a.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[p]="string"==typeof e?e:r,s[1]=o;for(var u=2;u<i;u++)s[u]=t[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4365:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=t(2206),r=(t(2983),t(4993));const i={sidebar_position:-100,sidebar_label:"Intro"},s="React async states",o={unversionedId:"intro",id:"intro",title:"React async states",description:"A multi-paradigm React state management library.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/react-async-states/docs/intro",draft:!1,editUrl:"https://github.com/incepter/react-async-states/edit/main/packages/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:-100,frontMatter:{sidebar_position:-100,sidebar_label:"Intro"},sidebar:"tutorialSidebar",next:{title:"Concepts",permalink:"/react-async-states/docs/concepts"}},l={},u=[{value:"What is this ?",id:"what-is-this-",level:2},{value:"Main features",id:"main-features",level:2},{value:"<ins>Multi-paradigm nature</ins>",id:"multi-paradigm-nature",level:4},{value:"<ins>Easy to use and Minimal API (<code>useAsync</code>).</ins>",id:"easy-to-use-and-minimal-api-useasync",level:4},{value:"<ins>Tiny, no dependencies and targets all environments</ins>",id:"tiny-no-dependencies-and-targets-all-environments",level:4},{value:"<ins>Synchronous and asynchronous</ins>",id:"synchronous-and-asynchronous",level:4},{value:"<ins>Familiar</ins>",id:"familiar",level:4},{value:"<ins>Sync, Promises, async/await</ins>",id:"sync-promises-asyncawait",level:4},{value:"<ins>Automatic and friendly cancellations</ins>",id:"automatic-and-friendly-cancellations",level:4},{value:"<ins>Apply effects on runs such as debounce and throttle</ins>",id:"apply-effects-on-runs-such-as-debounce-and-throttle",level:4},{value:"<ins>On-demand cache support</ins>",id:"on-demand-cache-support",level:4},{value:"<ins>And many more</ins>",id:"and-many-more",level:4},{value:"Motivations",id:"motivations",level:2},{value:"Installation",id:"installation",level:2}],c={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"react-async-states"},"React async states"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"A multi-paradigm React state management library.")),(0,r.kt)("h2",{id:"what-is-this-"},"What is this ?"),(0,r.kt)("p",null,"This is a multi-paradigm library for state management."),(0,r.kt)("p",null,"It aims to facilitate working non only with asynchronous states, but only the\nsynchronous ones. It was designed to reduce the need boilerplate to achieve\ngreat, predictable and effective results."),(0,r.kt)("h2",{id:"main-features"},"Main features"),(0,r.kt)("h4",{id:"multi-paradigm-nature"},(0,r.kt)("ins",null,"Multi-paradigm nature")),(0,r.kt)("p",null,"The library can work with the following modes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Imperative")," and/or ",(0,r.kt)("inlineCode",{parentName:"li"},"declarative")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Synchronous")," and/or ",(0,r.kt)("inlineCode",{parentName:"li"},"Asynchronous")),(0,r.kt)("li",{parentName:"ul"},"Data fetching and/or any form of asynchrony"),(0,r.kt)("li",{parentName:"ul"},"Inside and/or outside ",(0,r.kt)("inlineCode",{parentName:"li"},"React")),(0,r.kt)("li",{parentName:"ul"},"With or without ",(0,r.kt)("inlineCode",{parentName:"li"},"Cache")),(0,r.kt)("li",{parentName:"ul"},"sync or ",(0,r.kt)("inlineCode",{parentName:"li"},"Promises")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"async/await")," or nothing at all"),(0,r.kt)("li",{parentName:"ul"},"Allows abstractions on top of it"),(0,r.kt)("li",{parentName:"ul"},"...")),(0,r.kt)("h4",{id:"easy-to-use-and-minimal-api-useasync"},(0,r.kt)("ins",null,"Easy to use and Minimal API (",(0,r.kt)("inlineCode",{parentName:"h4"},"useAsync"),").")),(0,r.kt)("p",null,"The main hook of the library: ",(0,r.kt)("inlineCode",{parentName:"p"},"useAsync")," allows the creation,\nsubscription and manipulation of the desired state."),(0,r.kt)("p",null,"The hooks signature is pretty familiar: a configuration and dependencies."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"useAsync(create, deps);\n")),(0,r.kt)("h4",{id:"tiny-no-dependencies-and-targets-all-environments"},(0,r.kt)("ins",null,"Tiny, no dependencies and targets all environments")),(0,r.kt)("p",null,"The library has no dependencies and very small on size compared to all the power\nit gives, and it should target all environments (browser, node, native...)."),(0,r.kt)("h4",{id:"synchronous-and-asynchronous"},(0,r.kt)("ins",null,"Synchronous and asynchronous")),(0,r.kt)("p",null,"The library adds the ",(0,r.kt)("inlineCode",{parentName:"p"},"status")," property as part of the state, the possible values\nare: ",(0,r.kt)("inlineCode",{parentName:"p"},"initial"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"pending"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"success")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"error"),"."),(0,r.kt)("p",null,"When your function runs, it becomes asynchronous if the returned value is a\n",(0,r.kt)("inlineCode",{parentName:"p"},"promise"),". Or else, it passes synchronously to the resolving state."),(0,r.kt)("p",null,"You can also control the ",(0,r.kt)("inlineCode",{parentName:"p"},"pending")," status by skipping it in certain cases: let's\nsay you API answered very fast (for example, less than 300ms) in this case\nthere will be no transition to the pending state. Of course, this is an opt-in\nbehavior via the ",(0,r.kt)("inlineCode",{parentName:"p"},"skipPendingDelayMs")," configuration."),(0,r.kt)("h4",{id:"familiar"},(0,r.kt)("ins",null,"Familiar")),(0,r.kt)("p",null,"The library was designed to look familiar to you. For example, the main hook\nthat you will interact with has a signature similar to the hooks you've been\nusing in React the whole time. ie:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const result = useAsync(options, dependencies);\n")),(0,r.kt)("p",null,"The library default dependencies are an empty array for convenience."),(0,r.kt)("p",null,"The result given by the previous hook are also similar to other libraries you\nmay have used before, such as react-query, redux toolkit query or apolo client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const { isPending, data, error } = useAsync(config, deps);\n")),(0,r.kt)("p",null,"Of course, the library has many other things that will cover all your needs."),(0,r.kt)("h4",{id:"sync-promises-asyncawait"},(0,r.kt)("ins",null,"Sync, Promises, async/await")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"producer"),", the core concept of the library can be of different forms:"),(0,r.kt)("p",null,"It can be a sync function such as a variant of a reducer, or return a promise\n(thenable) to your state or use async/await syntax."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"useAsync();\nuseAsync(function getSomeData() {  return fetchMyData(); });\nuseState(async function getSomeData() {  return await fetchMyData(); });\n")),(0,r.kt)("p",null,"It is important to note that the previous writing won't trigger or run your\nfunction, on the contrary to some other libraries that requires you to control\nit via an ",(0,r.kt)("inlineCode",{parentName:"p"},"enabled")," flag. This library uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"lazy")," flag, which defaults to\ntrue. In order to make it automatic, you need to provide a ",(0,r.kt)("inlineCode",{parentName:"p"},"lazy: false")," option."),(0,r.kt)("h4",{id:"automatic-and-friendly-cancellations"},(0,r.kt)("ins",null,"Automatic and friendly cancellations")),(0,r.kt)("p",null,"The library was designed from the start to support cancellations in a standard\nway: an ",(0,r.kt)("inlineCode",{parentName:"p"},"onAbort")," callback registration function that registers your callbacks,\nthat are invoked once your run is cancelled (or manually)."),(0,r.kt)("p",null,"In practice, we found ourselves writing the following, depending on context:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"onAbort(() => socket.disconnect());\nonAbort(() => worker.terminate());\nonAbort(() => clearInterval(id));\nonAbort(() => clearTimeout(id));\n")),(0,r.kt)("h4",{id:"apply-effects-on-runs-such-as-debounce-and-throttle"},(0,r.kt)("ins",null,"Apply effects on runs such as debounce and throttle")),(0,r.kt)("p",null,"To avoid creating additional state pieces and third party utilities,\nthe library has out-of-the box support for effects that can be applied to runs:\nsuch as ",(0,r.kt)("inlineCode",{parentName:"p"},"debounce"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"throttle")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"delay"),"."),(0,r.kt)("p",null,"This support allows you to create awesome user experience natively with the\nminimum CPU and RAM fingerprints, without additional libraries or managed\nvariables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useAsync } from "react-async-states";\n\nconst { source: { run } } = useAsync({\n  producer: searchUserByName,\n  \n  // debounce runs for 300ms\n  runEffect: "debounce",\n  runEffectDurationMs: 300,\n  \n  // skip pending status under 200ms\n  skipPendingDelayMs: 200,\n  \n  // stay in pending state for at least 500ms if you enter it\n  keepPendingForMs: 500,\n});\n\n<input onChange={e => run(e.target.value)} /* ... */ />\n')),(0,r.kt)("h4",{id:"on-demand-cache-support"},(0,r.kt)("ins",null,"On-demand cache support")),(0,r.kt)("p",null,"Obviously, there is cache. But that's opt-in via the ",(0,r.kt)("inlineCode",{parentName:"p"},"cacheConfig.enabled"),"\nconfiguration to avoid unexpected behavior due to existing cache."),(0,r.kt)("p",null,"Let's add cache support to the previous example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useAsync } from "react-async-states";\n\n// note that the whole configuration object does not depend on render\n// and can be moved to module level static object.\nconst { source: { run } } = useAsync({\n  producer: searchUserByName,\n  \n  // debounce runs for 300ms\n  runEffect: "debounce",\n  runEffectDurationMs: 300,\n  \n  // skip pending status under 200ms\n  skipPendingDelayMs: 200,\n  \n  // stay in pending state for at least 500ms if you enter it\n  keepPendingForMs: 500,\n  \n  // cache config:\n  cacheConfig: {\n    // enable cache\n    enabled: true,\n    \n    // run cache hash is the username passed to the producer, this allows to\n    // have cached entries such as: `incepter` : { state: {data}}\n    hash: (args) => args[0],\n    \n    // this is a successful state. Only success states are cached\n    // The library uses Infinity as a default cached timeout\n    timeout: (state) => state.data.maxAge || 60 * 5_000,\n    \n    // automatically run the function again after the cache is expired\n    // this is not applicable to Infinity.\n    auto: true,\n  }\n});\n\n\n<input onChange={e => run(e.target.value)} /* ... */ />\n')),(0,r.kt)("p",null,"The library allows you also to ",(0,r.kt)("inlineCode",{parentName:"p"},"persist")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"load")," cache, even asynchronously\nand even do something in the ",(0,r.kt)("inlineCode",{parentName:"p"},"onCacheLoad")," event."),(0,r.kt)("h4",{id:"and-many-more"},(0,r.kt)("ins",null,"And many more")),(0,r.kt)("p",null,"The previous examples are just a few subset of the library's power, there are\nseveral other unique features like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Cascade runs and cancellations"),(0,r.kt)("li",{parentName:"ul"},"Run and wait for resolve"),(0,r.kt)("li",{parentName:"ul"},"Producer states that emit updates after resolve (such as websockets)"),(0,r.kt)("li",{parentName:"ul"},"Configurable state disposal and garbage collection"),(0,r.kt)("li",{parentName:"ul"},"React 18 support, and no tearing even without ",(0,r.kt)("inlineCode",{parentName:"li"},"useSES")),(0,r.kt)("li",{parentName:"ul"},"StateBoundary and support for all three ",(0,r.kt)("inlineCode",{parentName:"li"},"render strategies")),(0,r.kt)("li",{parentName:"ul"},"post subscribe and change events"),(0,r.kt)("li",{parentName:"ul"},"And many more..")),(0,r.kt)("h2",{id:"motivations"},"Motivations"),(0,r.kt)("p",null,"Managing state using React APIs or third party libraries ain't an easy task.\nLet's talk about the parts we miss:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Share state in all directions of your app."),(0,r.kt)("li",{parentName:"ul"},"Combining synchronous and asynchronous effects in a single library."),(0,r.kt)("li",{parentName:"ul"},"Automatically reset a state when you no longer use it."),(0,r.kt)("li",{parentName:"ul"},"Dealing with concurrent asynchronous operations' callbacks."),(0,r.kt)("li",{parentName:"ul"},"Run functions with different arguments, anytime."),(0,r.kt)("li",{parentName:"ul"},"Dynamically share states, subscribe and have full control over them."),(0,r.kt)("li",{parentName:"ul"},"Select a part of a state and re-render only when you decide that it changed."),(0,r.kt)("li",{parentName:"ul"},"Automatically cancel asynchronous operations when the component unmounts,\nor dependencies change.")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"The library is available as a package on NPM for use with a module bundler or\nin a Node application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="NPM"',title:'"NPM"'},"npm install async-states react-async-states\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="YARN"',title:'"YARN"'},"yarn add async-states react-async-states\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="PNPM"',title:'"PNPM"'},"pnpm add async-states react-async-states\n")))}d.isMDXComponent=!0}}]);